# pylint: disable=non-ascii-name

from typing import DefaultDict, Dict, List, TypedDict

from bs4 import BeautifulSoup as Soup

from custom_types import ForvoAPIResponse, HTMLString, URL


# Jisho

ExpectedJishoOutput = Dict[str, Dict]

class JishoDict(TypedDict):
    """Dictionary generated by the Jisho module upon fetching a word's definition etc"""
    expected_output: ExpectedJishoOutput


# Accents

class AccentDict(TypedDict):
    """Dictionary generated by modules that fetch the accent of words (ie OJAD, Suzuki, Wadoku)"""
    expected_output: Dict[str, List[str]]


class OjadExpectedSection(TypedDict):
    """Dictionary containing an HTML section extracted by the OJAD module
    and its contained information"""
    na_adj: bool
    writing_section: Soup
    writings: List[str]
    reading_sections: List[Soup]
    readings: List[str]


class OjadAccentDict(AccentDict):
    """Dictionary generated by the OJAD module"""
    htmls: List[HTMLString]
    url: URL
    expected_sections: List[OjadExpectedSection]
    full_accent_dict: DefaultDict[str, List[str]]


class SuzukiExpectedSection(TypedDict):
    """Dictionary containing an HTML section extracted by the Suzuki module
    and its contained information"""
    writing_section: Soup
    writing: str
    reading_section: Soup
    accent_section: Soup
    reading: str


class SuzukiAccentDict(AccentDict):
    """Dictionary generated by the Suzuki module"""
    html: HTMLString
    formdata: Dict[str, str]
    expected_sections: List[SuzukiExpectedSection]


class WadokuExpectedSection(TypedDict):
    """Dictionary containing an HTML section extracted by the Wadoku module
    and its contained information"""
    writing_section: Soup
    writings: List[str]
    reading_sections: List[Soup]
    readings: List[str]


class WadokuAccentDict(AccentDict):
    """Dictionary generated by the Wadoku module"""
    html: HTMLString
    url: URL
    expected_sections: List[WadokuExpectedSection]
    full_accent_dict: DefaultDict[str, List[str]]


# Audio

class AudioDict(TypedDict):
    """Dictionary generated by modules that fetch audio files of words (ie Forvo, Wanikani)"""
    expected_output: Dict[str, List[str]]


class ForvoExpectedSection(TypedDict):
    """Dictionary generated by the audio for an individual word"""
    url: URL
    api_response: str
    total_items: int
    expected_urls: List[URL]


class ForvoAudioDict(AudioDict):
    """Dictionary generated by the Forvo module"""
    expected_sections: List[ForvoExpectedSection]


class WanikaniAudioDict(AudioDict):
    """Dictionary generated by the Wanikani module"""




# Expected final result

class ExpectedResultAccents(TypedDict):
    """File of the final result containing the fetched accented readings"""
    ojad: List[str]
    suzuki: List[str]
    wadoku: List[str]

class ExpectedResultAudio(TypedDict):
    """Field of the final result containing URLs to audio files"""
    forvo: List[URL]
    wanikani: List[URL]

class ExpectedResult(TypedDict):
    """Expected output for the main get_info() function"""
    word: str
    jisho: ExpectedJishoOutput
    accent: ExpectedResultAccents
    audio: ExpectedResultAudio


# Complete test dictionary type

class FullTestDict(TypedDict):
    """A dictionary containing all the information and expected results for any test"""
    id: str
    input: List[str]
    jisho: JishoDict
    ojad: OjadAccentDict
    suzuki: SuzukiAccentDict
    wadoku: WadokuAccentDict
    forvo: ForvoAudioDict
    wanikani: WanikaniAudioDict
    expected_result: List[ExpectedResult]
