{"version":3,"sources":["assets/icons/icon_error.svg","shared/ErrorMessage/ErrorMessage.tsx","shared/LoadingSpinner/LoadingSpinner.tsx","components/core/UtilsService.ts","components/core/HttpService.ts","components/InputPage/InputBox/InputBox.tsx","components/InputPage/InputPage.tsx","assets/icons/icon_plus.svg","assets/icons/icon_minus.svg","shared/ExpandButtons/ExpandButton.tsx","shared/ExpandButtons/FullExpandButton.tsx","assets/icons/icon_play_button.svg","assets/icons/icon_stop_button.svg","components/ResultsList/ResultAudio/ResultAudioRow.tsx","components/ResultsList/ResultAudio/ResultAudioModule.tsx","components/ResultsList/ResultAudio/ResultAudio.tsx","components/ResultsList/ResultDefinitions/ResultDefinitionSense.tsx","components/ResultsList/ResultDefinitions/ResultDefinition.tsx","components/ResultsList/ResultDefinitions/ResultDefinitions.tsx","components/ResultsList/ResultReadings/ResultReadingsRow.tsx","components/ResultsList/ResultReadings/ResultReadings.tsx","components/ResultsList/ResultRelatedWords/ResultRelatedWord.tsx","components/ResultsList/ResultRelatedWords/ResultRelatedWords.tsx","webpack:///./src/assets/icons/icon_copy.svg?048d","components/ResultsList/ResultSentences/ResultSentence.tsx","components/ResultsList/ResultSentences/ResultSentences.tsx","components/ResultsList/ResultTags/ResultTag.tsx","components/ResultsList/ResultTags/ResultTags.tsx","assets/icons/icon_copy.svg","components/ResultsList/ResultTitle/ResultTitle.tsx","assets/icons/icon_chevron_up.svg","assets/icons/icon_chevron_down.svg","components/ResultsList/ResultToggleBar/ResultToggleBar.tsx","components/ResultsList/ResultBlock.tsx","components/ResultsList/ResultsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorMessage","children","className","src","ErrorIcon","alt","LoadingSpinner","UtilsService","extractWordsFromInput","s","split","filter","char","capitaliseString","includes","slice","toUpperCase","copyStringToClipboard","copyString","navigator","clipboard","writeText","encodeURI","url","queryParams","queryString","Object","entries","map","x","join","HttpService","API_URL","utilsService","this","slug","a","requestOptions","headers","method","addQueryParamsToUrl","fetch","data","status","Error","statusText","json","resp","InputBox","setWordList","setErrorOccurred","useSearchParams","searchParams","setSearchParams","httpService","useState","text","setText","isLoading","setIsLoading","sendWords","useRef","forceText","current","words","searchText","JSON","stringify","makeGetRequest","console","log","searchQueryParams","get","useEffect","name","value","onChange","e","target","onSubmit","_","word","index","type","onClick","InputPage","errorOccurred","ExpandButton","currentDisplay","updateDisplay","maxDisplay","minDisplay","batchSize","Math","max","IconMinus","min","IconPlus","FullExpandButton","rowsDisplay","updateRowsDisplay","ResultAudioRow","audioData","Audio","audio","playing","setPlaying","currentTime","play","pause","addEventListener","removeEventListener","IconStopButton","IconPlayButton","speaker","subtitle","ResultAudioModule","moduleTitle","isExpanded","updateIsExpanded","rowIndex","length","displayRow","ResultAudio","allAudio","module","wanikani","main_data","metadata","voice_actor_name","voice_description","forvo","username","japanesepod","writing","reading","some","ResultDefinitionSense","ordinality","sense","dfn","english_definitions","wordType","parts_of_speech","tags","info","getWordType","ResultDefinition","definitionData","buildTitleText","otherForms","japanese","senses","ResultDefinitions","jisho","results","result","ResultReadingsRow","title","readings","copyReadingToClipboard","ResultReadings","sitesAndReadings","ojad","accent","wadoku","suzuki","readingExists","ResultRelatedWord","relatedWord","window","open","ResultRelatedWords","extra","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgIconCopy","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","ref","id","ForwardRef","ResultSentence","sentence","ja","en","interweaveSentences","sentenceLists","maxLength","list","finalList","sentenceList","push","ResultSentences","wanikaniSentences","sentences","tangorinSentences","tangorin","allSentences","ResultTag","tag","translatedTag","toLowerCase","replace","extractTags","jlpt","flat","is_common","ResultTags","ResultTitle","toggleIsExpanded","IconCopy","ResultToggleBar","imgSrc","IconChevronUp","IconChevronDown","Result","setIsExpanded","getContextSentence","isSuruSense","getCopyWord","getFilteredDefinitions","ResultsList","wordList","wordData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bd335c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_error.3e656acb.svg\";","import React from 'react';\n\nimport ErrorIcon from \"../../assets/icons/icon_error.svg\";\nimport './ErrorMessage.css';\n\n\ninterface ErrorMessageProps {\n    children: string;\n}\n\nconst ErrorMessage: React.FunctionComponent<ErrorMessageProps> = ({ children }) => {\n    return (\n        <div className=\"error-message vertical-separation-large\">\n            <img src={ErrorIcon} alt=\"error icon\" />\n            { children }\n            <img src={ErrorIcon} alt=\"error icon\" />\n        </div>\n    );\n}\n\nexport default ErrorMessage;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\n\nconst LoadingSpinner: React.FC = () => {\n    return <div className=\"loader vertical-separation-large\" />;\n}\n\nexport default LoadingSpinner;\n","import QueryParams from \"../../types/QueryParams\";\n\n\nexport default class UtilsService {\n\n    doubleURIEncode(s: string): string {\n        return encodeURI(encodeURI(s));\n    }\n\n    addQueryParamsToUrl(url: string, queryParams: QueryParams): string {\n        let queryString = Object.entries(queryParams)\n            .map(x => x.join(\"=\"))\n            .join(\"&\");\n        return url + \"?\" + encodeURI(queryString);\n    }\n\n    extractWordsFromInput = (s: string): string[] => {\n        return s.split(/\\s+/).filter(char => char !== \"\");\n    }\n\n    capitaliseString = (s: string): string => {\n        if (!s) return s;\n        if (\"( \".includes(s[0])) return s[0] + this.capitaliseString(s.slice(1));\n        return s[0].toUpperCase() + s.slice(1);\n    }\n\n    copyStringToClipboard = (copyString: string) => {\n        navigator.clipboard.writeText(copyString);\n    }\n\n}\n","import QueryParams from \"../../types/QueryParams\";\nimport UtilsService from \"./UtilsService\";\n\n\nexport default class HttpService {\n\n    // API_URL: string = \"http://localhost:9090\"\n    // API_URL: string = \"http://3.8.95.26:5000\";\n    // API_URL: string = \"https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com/dev\";\n    API_URL: string = \"https://u36f77yj2mm3q5tk43d7vbmxeu0rccvk.lambda-url.eu-west-2.on.aws\"\n    utilsService: UtilsService\n\n\n    constructor() {\n        this.utilsService = new UtilsService();\n    }\n\n\n    async makeGetRequest(slug: string, queryParams?: QueryParams): Promise<any> {\n        let url: string = this.API_URL + slug;\n        let requestOptions = {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            method: \"GET\",\n        };\n\n        if (typeof queryParams !== \"undefined\") {\n            url = this.utilsService.addQueryParamsToUrl(url, queryParams)\n        };\n\n        let data: any = await fetch(url, requestOptions);\n        if (data.status === 404) {\n            throw new Error(\"An error occurred: \" + data.statusText);\n        }\n        let resp: any = await data.json();\n        return resp;\n    }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../../../shared/LoadingSpinner/LoadingSpinner\";\n\nimport FullResponseItem from \"../../../types/FullResponseItem\";\nimport QueryParams from \"../../../types/QueryParams\";\n\nimport HttpService from \"../../core/HttpService\";\nimport UtilsService from \"../../core/UtilsService\";\n\nimport \"./InputBox.css\";\n\ninterface InputBoxProps {\n  setWordList: (s: FullResponseItem[]) => void;\n  setErrorOccurred: (x: boolean) => void;\n}\n\nconst InputBox: React.FC<InputBoxProps> = ({\n  setWordList,\n  setErrorOccurred,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const httpService = new HttpService();\n  const utilsService = new UtilsService();\n\n  const [text, setText] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const sendWords = useRef((forceText?: string) => {});\n  sendWords.current = async (forceText?: string) => {\n    setIsLoading(true);\n    setErrorOccurred(false);\n\n    const searchText = forceText || text;\n    setSearchParams({ words: searchText });\n\n    const words: string[] = utilsService.extractWordsFromInput(searchText);\n    const queryParams: QueryParams = { words: JSON.stringify(words) };\n\n    try {\n    //   const resp = await httpService.makeGetRequest(\"/words\", queryParams);\n      const resp = await httpService.makeGetRequest(\"\", queryParams);\n      setWordList(resp);\n      console.log(resp);\n    } catch (error) {\n      setErrorOccurred(true);\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Check for query params and search if present\n  const searchQueryParams = useRef(() => {});\n  searchQueryParams.current = () => {\n    let words = searchParams.get(\"words\");\n    if (words === null || words === \"\") return;\n    setText(words);\n    sendWords.current(words);\n  };\n  useEffect(() => {\n    searchQueryParams.current();\n  }, []);\n\n  return isLoading ? (\n    <LoadingSpinner />\n  ) : (\n    <form className=\"input-form\">\n      <input\n        name=\"main-input\"\n        className=\"main-input mplus\"\n        value={text}\n        onChange={(e: any) => setText(e.target.value)}\n        onSubmit={(_) => sendWords.current()}\n      />\n      <div className=\"words-display vertical-separation-small\">\n        {utilsService.extractWordsFromInput(text).map((word, index) => (\n          <div key={index} className=\"word-display\">\n            {word}\n          </div>\n        ))}\n      </div>\n      <button\n        className=\"button-primary vertical-separation-medium\"\n        type=\"submit\"\n        onClick={(_) => sendWords.current()}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport ErrorMessage from '../../shared/ErrorMessage/ErrorMessage';\nimport InputBox from './InputBox/InputBox';\n\nimport FullResponseItem from '../../types/FullResponseItem';\n\nimport './InputPage.css';\n\n\nexport interface InputPageProps {\n    setWordList: (s: FullResponseItem[]) => void;\n}\n\nconst InputPage: React.FC<InputPageProps> = ({ setWordList }) => {\n    const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\n\n    return (\n        <div className=\"input-page\">\n            <InputBox setWordList={setWordList} setErrorOccurred={setErrorOccurred}/>\n            { errorOccurred && <ErrorMessage>An error occurred. Please try again</ErrorMessage> }\n        </div>\n    );\n}\n\nexport default InputPage;\n","export default __webpack_public_path__ + \"static/media/icon_plus.26781cdc.svg\";","export default __webpack_public_path__ + \"static/media/icon_minus.d8777013.svg\";","import React from 'react';\n\nimport IconPlus from '../../assets/icons/icon_plus.svg';\nimport IconMinus from '../../assets/icons/icon_minus.svg';\n\nimport './ExpandButton.css';\n\n\ninterface ExpandButtonProps {\n    currentDisplay: number;\n    updateDisplay: (newDisplay: number) => void;\n    maxDisplay: number;\n    minDisplay: number;\n    batchSize: number;\n}\n\nconst ExpandButton: React.FC<ExpandButtonProps> = ({\n    currentDisplay,\n    updateDisplay,\n    maxDisplay,\n    minDisplay,\n    batchSize\n}) => {\n    const displayPlus = () => currentDisplay < maxDisplay;\n    const pressPlus = () => updateDisplay(Math.min(maxDisplay, currentDisplay + batchSize));\n    const displayMinus = () => currentDisplay > minDisplay;\n    const pressMinus = () => updateDisplay(Math.max(minDisplay, currentDisplay - batchSize));\n\n    return (\n        <div className=\"expand-button-container flex-row unselectable\">\n            { displayMinus() &&\n                <div className=\"expand-button expand-button-decrease\" onClick={pressMinus}>\n                    <img src={IconMinus} alt=\"button to decrease the number of items displayed\" />\n                </div>\n            }\n            { displayPlus() &&\n                <div className=\"expand-button expand-button-increase\" onClick={pressPlus}>\n                    <img src={IconPlus} alt=\"button to increase the number of items displayed\" />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ExpandButton;\n","import React from 'react';\nimport ExpandButton from './ExpandButton';\n\n\ninterface FullExpandButtonProps {\n    rowsDisplay: boolean;\n    updateRowsDisplay: (x: boolean) => void;\n}\n\nconst FullExpandButton: React.FC<FullExpandButtonProps> = ({ rowsDisplay, updateRowsDisplay }) => {\n    const currentDisplay = () => rowsDisplay ? 1 : 0;\n    const updateDisplay = (x: number) => {\n        updateRowsDisplay(x === 1 ? true : false);\n    }\n\n    return <ExpandButton\n        updateDisplay={updateDisplay}\n        minDisplay={0}\n        maxDisplay={1}\n        batchSize={1}\n        currentDisplay={currentDisplay()}\n    />;\n}\n\nexport default FullExpandButton;\n","export default __webpack_public_path__ + \"static/media/icon_play_button.a820363c.svg\";","export default __webpack_public_path__ + \"static/media/icon_stop_button.cfec569a.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\n\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\n\nimport IconPlayButton from '../../../assets/icons/icon_play_button.svg'\nimport IconStopButton from '../../../assets/icons/icon_stop_button.svg'\n\n\ninterface ResultAudioRowProps {\n    audioData: ResultAudioRowData;\n}\n\nconst ResultAudioRow: React.FC<ResultAudioRowProps> = ({ audioData }) => {\n    const [audio] = useState(new Audio(audioData.url));\n    const [playing, setPlaying] = useState(false);\n\n    const togglePlaying = () => setPlaying(!playing);\n\n    useEffect(() => {\n            audio.currentTime = 0;\n            playing ? audio.play() : audio.pause();\n        },\n        [playing]\n    );\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => setPlaying(false));\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n        };\n    }, []);\n\n    return (\n        <div className=\"result-audio-row flex-row\">\n            <img\n                src={ playing ? IconStopButton : IconPlayButton }\n                alt=\"audio player icon\"\n                className=\"audio-player unselectable\"\n                onClick={togglePlaying}\n            />\n            <div className=\"result-audio-speaker\">{ audioData.speaker }</div>\n            <div className=\"result-audio-subtitle\">{ audioData.subtitle || \"\" }</div>\n        </div>\n     );\n}\n\nexport default ResultAudioRow;\n","import React, { useState } from 'react';\nimport FullExpandButton from '../../../shared/ExpandButtons/FullExpandButton';\nimport ResultAudioRow from './ResultAudioRow';\n\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\n\n\ninterface ResultAudioModuleProps {\n    moduleTitle: string;\n    audioData: ResultAudioRowData[];\n}\n\nconst ResultAudioModule: React.FC<ResultAudioModuleProps> = ({ moduleTitle, audioData}) => {\n    const [isExpanded, updateIsExpanded] = useState<boolean>(false);\n\n    const displayButton = () => audioData.length > 3;\n    const displayRow = (rowIndex: number): boolean => {\n        return (\n            rowIndex < 2 ||\n            (rowIndex === 2 && audioData.length === 3) ||\n            isExpanded === true\n        );\n    }\n\n    return (\n        <div className=\"result-audio-module vertical-separation-small\">\n            <div className=\"audio-module-title\">{ moduleTitle }</div>\n            {audioData.filter((_, rowIndex) => displayRow(rowIndex)).map(audio =>\n                <ResultAudioRow key={audio.speaker} audioData={audio}/>\n            )}\n            { displayButton() &&\n                <FullExpandButton\n                    rowsDisplay={isExpanded}\n                    updateRowsDisplay={updateIsExpanded}\n                />\n            }\n        </div>\n    );\n}\n\nexport default ResultAudioModule;\n","import React from 'react';\nimport ResultAudioModule from './ResultAudioModule';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\n\nimport './ResultAudio.css';\n\n\ninterface ResultAudioProps {\n    data: FullResponseItem;\n}\n\ninterface AudioModule {\n    module: string;\n    audioData: ResultAudioRowData[];\n}\n\nconst ResultAudio: React.FC<ResultAudioProps> = ({ data }) => {\n\n    const wanikaniData: ResultAudioRowData[] = data.wanikani.main_data.audio.map(audio => ({\n        url: audio.url,\n        speaker: audio.metadata.voice_actor_name,\n        subtitle: audio.metadata.voice_description,\n    }));\n    const forvoData: ResultAudioRowData[] = data.forvo.main_data.audio.map(audio => ({\n        url: audio.url,\n        speaker: audio.username,\n        subtitle: null,\n    }));\n    const japanesePodData: ResultAudioRowData[] = data.japanesepod.main_data.audio.map(audio => ({\n        url: audio.url,\n        speaker: audio.writing,\n        subtitle: audio.reading,\n    }));\n\n    const allAudio: AudioModule[] = [\n        {module: \"Wanikani\", audioData: wanikaniData},\n        {module: \"Forvo\", audioData: forvoData},\n        {module: \"JapanesePod101\", audioData: japanesePodData},\n    ];\n\n    const displayAudio = (): boolean => allAudio.some(x => x.audioData.length > 0);\n\n    return (\n        displayAudio() ?\n        <div className=\"result-audio\">\n            <div className=\"left-col-title\">\n                Audio\n            </div>\n            {allAudio.filter(({ audioData }) => audioData.length > 0).map(({ module, audioData }) =>\n                <ResultAudioModule key={module} moduleTitle={module} audioData={audioData} />\n            )}\n        </div> :\n        <></>\n     );\n}\n\nexport default ResultAudio;\n","import React from 'react';\n\nimport { JishoAPIItemSense } from '../../../types/ResponseItemJisho';\n\nimport UtilsService from '../../core/UtilsService';\n\n\ninterface ResultDefinitionSenseProps {\n    ordinality: number;\n    sense: JishoAPIItemSense;\n}\n\nconst ResultDefinitionSense: React.FC<ResultDefinitionSenseProps> = ({ ordinality, sense }) => {\n    const utilsService = new UtilsService();\n\n    const dfn: string = sense.english_definitions.map(utilsService.capitaliseString).join(\" ; \");\n    const copyDefinitionToClipboard = () => {\n        utilsService.copyStringToClipboard(dfn);\n    }\n\n    const getWordType = (): string => {\n        let wordType = sense.parts_of_speech.join(\"・\");\n        if (sense.tags.length > 0) {\n            wordType += \" (\" + sense.tags.join(\", \") + \")\";\n        }\n        if (sense.info.length > 0) {\n            wordType += \" (\" + sense.info.join(\", \") + \")\";\n        }\n        return wordType;\n    }\n\n    return (\n        <div className=\"result-definition-sense flex-col\">\n            <div className=\"sense-part-of-speech\">{ getWordType() }</div>\n            <div className=\"sense-english-definition\">\n                <span\n                    className=\"unselectable copy-cursor\"\n                    onClick={copyDefinitionToClipboard}\n                >{ ordinality + '. ' }</span>\n                { dfn }\n            </div>\n        </div>\n    );\n}\n\nexport default ResultDefinitionSense;\n","import React from 'react';\nimport ResultDefinitionSense from './ResultDefinitionSense';\n\nimport { JishoAPIItem, JishoAPIItemJapanese } from '../../../types/ResponseItemJisho';\n\n\ninterface ResultDefinitionProps {\n    definitionData: JishoAPIItem;\n}\n\nconst ResultDefinition: React.FC<ResultDefinitionProps> = ({ definitionData }) => {\n    const buildTitleText = (word: JishoAPIItemJapanese): string => {\n        const main = word.word || word.reading || \"\";\n        const subtext = (word.word && word.reading) ? `【${word.reading}】` : \"\";\n        return main + subtext;\n    }\n\n    const otherForms = definitionData.japanese.slice(1);\n    const showOtherForms = (): boolean => (otherForms.length > 0);\n\n    return (\n        <div className=\"result-definition flex-col\">\n            <div className=\"result-definition-title mplus\">\n                { buildTitleText(definitionData.japanese[0]) }\n            </div>\n            <div className=\"result-definition-senses-container flex-col\">\n                { definitionData.senses.map((sense, index) =>\n                    <ResultDefinitionSense key={index} ordinality={index+1} sense={sense} />\n                )}\n                {\n                    showOtherForms() &&\n                    <div className=\"result-definition-other-forms flex-col\">\n                        <div className=\"result-other-forms-title\">Other forms</div>\n                        <div className=\"result-other-forms-words mplus\">\n                            { otherForms.map(buildTitleText).join(\"、\") }\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ResultDefinition;\n","import React from 'react';\nimport ResultDefinition from './ResultDefinition';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\n\nimport './ResultDefinitions.css';\n\n\ninterface ResultDefinitionsProps {\n    data: FullResponseItem;\n}\n\nconst ResultDefinitions: React.FC<ResultDefinitionsProps> = ({ data }) => {\n    return (\n        <div className=\"result-definitions-container flex-col\">\n            { data.jisho.main_data.results.map(result =>\n                <ResultDefinition key={result.slug} definitionData={result} />\n            )}\n        </div>\n    );\n}\n\nexport default ResultDefinitions;\n","import React from 'react';\n\nimport UtilsService from '../../core/UtilsService';\n\n\ninterface ResultReadingsRowProps {\n    title: string;\n    readings: string[];\n}\n\nconst ResultReadingsRow: React.FC<ResultReadingsRowProps> = ({ title, readings }) => {\n    const utilsService = new UtilsService();\n    const copyReadingToClipboard = (reading: string) => {\n        utilsService.copyStringToClipboard(reading);\n    }\n\n    return (\n        <div className=\"readings-row\">\n            <div className=\"readings-row-left\">{ title }:</div>\n            <div className=\"readings-row-right\">\n                {readings.map((reading, index) =>\n                    <div\n                        key={index}\n                        className=\"reading unselectable copy-cursor\"\n                        onClick={() => {copyReadingToClipboard(reading)}}\n                        title=\"Copy to clipboard\"\n                    >{ reading }</div>\n                )}\n            </div>\n        </div>\n     );\n}\n\nexport default ResultReadingsRow;\n","import React from 'react';\nimport ResultReadingsRow from './ResultReadingsRow';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\n\nimport './ResultReadings.css';\n\n\ninterface ResultReadingsProps {\n    data: FullResponseItem;\n}\n\ninterface ReadingSite {\n    title: string;\n    readings: string[];\n}\n\nconst ResultReadings: React.FC<ResultReadingsProps> = ({ data }) => {\n    const sitesAndReadings: ReadingSite[] = [\n        { title: \"OJAD\", readings: data.ojad.main_data.accent },\n        { title: \"Wadoku\", readings: data.wadoku.main_data.accent },\n        { title: \"Suzuki\", readings: data.suzuki.main_data.accent },\n    ];\n\n    const readingExists = ({ readings }: ReadingSite) => readings.length > 0;\n    const displayReadings = (): boolean => sitesAndReadings.some(readingExists);\n\n    return (\n        displayReadings() ?\n        <div className=\"result-readings\">\n            <div className=\"left-col-title\">\n                Readings\n            </div>\n            {sitesAndReadings.filter(readingExists).map(({ title, readings }) =>\n                <ResultReadingsRow key={title} title={title} readings={readings} />\n            )}\n        </div> :\n        <></>\n     );\n}\n\nexport default ResultReadings;\n","import React from 'react';\n\nimport { JishoExtraItem } from '../../../types/ResponseItemJisho';\n\n\ninterface ResultRelatedWordProps {\n    relatedWord: JishoExtraItem;\n}\n\nconst ResultRelatedWord: React.FC<ResultRelatedWordProps> = ({ relatedWord }) => {\n    const { slug, japanese } = relatedWord;\n\n    const url = `https://jisho.org/word/${slug}`;\n\n    return (\n        <div\n            className=\"related-word\"\n            onClick={()=> window.open(url, \"_blank\")}\n        >\n            { japanese[0].word || japanese[0].reading }\n        </div>\n    );\n}\n\nexport default ResultRelatedWord;\n","import React from 'react';\nimport ResultRelatedWord from './ResultRelatedWord';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\n\nimport './ResultRelatedWords.css';\n\n\ninterface ResultRelatedWordsProps {\n    data: FullResponseItem;\n}\n\nconst ResultRelatedWords: React.FC<ResultRelatedWordsProps> = ({ data }) => {\n    const displayRelatedWords = (): boolean => {\n        return data.jisho.main_data.extra.length > 0;\n    }\n\n    return (\n        displayRelatedWords() ?\n        <div className=\"result-related-words vertical-separation-small\">\n            <div className=\"left-col-title\">\n                Related words\n            </div>\n            <div className=\"related-words-container flex-row\">\n                {data.jisho.main_data.extra.map(result =>\n                    <ResultRelatedWord key={result.slug} relatedWord={result}/>\n                )}\n            </div>\n        </div> :\n        <></>\n     );\n}\n\nexport default ResultRelatedWords;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 8h-2v2h-2v-4h4v2zm8 16v-2h-6v2h6zm2-16h2v2h2v-4h-4v2zm2 12v2h-2v2h4v-4h-2zm-12 2h-2v-2h-2v4h4v-2zm14-10h-2v6h2v-6zm-16 6v-6h-2v4h-4v-14h14v4h-4v2h6v-8h-18v18h8z\"\n});\n\nfunction SvgIconCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconCopy);\nexport default __webpack_public_path__ + \"static/media/icon_copy.cbac2534.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport Sentence from '../../../types/Sentence';\n\nimport UtilsService from '../../core/UtilsService';\n\nimport { ReactComponent as IconCopy } from '../../../assets/icons/icon_copy.svg';\n\n\nexport interface ResultSentenceProps {\n    sentence: Sentence;\n    source: string;\n}\n\nconst ResultSentence: React.FC<ResultSentenceProps> = ({ sentence, source }) => {\n    const utilsService = new UtilsService();\n    const copySentenceToClipboard = () => {\n        utilsService.copyStringToClipboard(sentence.ja + '\\t' + sentence.en);\n    }\n\n    return (\n        <>\n            {/* Desktop */}\n            <div className=\"result-sentence flex-col hide-mobile\">\n                <div className=\"result-sentence-top flex-row\">\n                    <div className=\"result-sentence-ja\">{ sentence.ja }</div>\n                    <div className=\"result-sentence-extra flex-row\">\n                        <div className=\"result-sentence-source\">{ `- ${source}` }</div>\n                        <IconCopy\n                            className=\"result-sentence-copy\"\n                            onClick={copySentenceToClipboard}\n                        />\n                    </div>\n                </div>\n                <div className=\"result-sentence-en\">{ sentence.en }</div>\n            </div>\n\n            {/* Mobile */}\n            <div className=\"result-sentence flex-col show-mobile\">\n                <div className=\"result-sentence-ja\">{ sentence.ja }</div>\n                <div className=\"result-sentence-en\">{ sentence.en }</div>\n                <div className=\"result-sentence-source\">{ `- ${source}` }</div>\n            </div>\n        </>\n    );\n}\n\nexport default ResultSentence;\n","import React, { useState } from 'react';\nimport ExpandButton from '../../../shared/ExpandButtons/ExpandButton';\nimport ResultSentence, { ResultSentenceProps } from './ResultSentence';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\n\nimport './ResultSentences.css';\n\n\ninterface ResultSentencesProps {\n    data: FullResponseItem;\n}\n\nconst ResultSentences: React.FC<ResultSentencesProps> = ({ data }) => {\n    const wanikaniSentences: ResultSentenceProps[] =\n        data.wanikani.main_data.sentences.map(s => ({sentence: s, source: \"Wanikani\"}));\n    const tangorinSentences: ResultSentenceProps[] =\n        data.tangorin.main_data.sentences.map(s => ({sentence: s, source: \"Tangorin\"}));\n\n    const allSentences = interweaveSentences([\n        wanikaniSentences,\n        tangorinSentences,\n    ]);\n\n    const maxDisplay = allSentences.length;\n    const minDisplay = Math.min(allSentences.length, 4);\n    const [rowsDisplay, updateRowsDisplay] = useState<number>(minDisplay);\n\n    const displayRow = (_: any, rowIndex: number): boolean => rowIndex+1 <= rowsDisplay;\n\n    return (\n        allSentences.length > 0 ?\n        <div className=\"result-sentences flex-col\">\n            <div className=\"right-col-title\">Context Sentences</div>\n            <div className=\"result-sentences-container flex-col\">\n                {allSentences.filter(displayRow).map(({ sentence, source }) =>\n                    <ResultSentence key={sentence.ja} sentence={sentence} source={source} />\n                )}\n                <ExpandButton\n                    currentDisplay={rowsDisplay}\n                    updateDisplay={updateRowsDisplay}\n                    maxDisplay={maxDisplay}\n                    minDisplay={minDisplay}\n                    batchSize={4}\n                />\n            </div>\n        </div> :\n        <></>\n    );\n}\n\nconst interweaveSentences = (sentenceLists: ResultSentenceProps[][]): ResultSentenceProps[] => {\n    const maxLength = Math.max(...sentenceLists.map(list => list.length));\n    let finalList: ResultSentenceProps[] = [];\n    for (let i = 0; i < maxLength; i++) {\n        for (let sentenceList of sentenceLists) {\n            if (i < sentenceList.length) {\n                finalList.push(sentenceList[i]);\n            }\n        }\n    }\n    return finalList;\n}\n\nexport default ResultSentences;\n","import React from 'react';\n\n\ninterface ResultTagProps {\n    tag: string;\n}\n\nconst ResultTag: React.FC<ResultTagProps> = ({ tag }) => {\n    const translatedTag = (\n        tag.slice(0,8) === \"wanikani\" ?\n        `wanikani level ${tag.slice(8)}` :\n        tag.toLowerCase().replace(\"-\", \" \")\n    );\n\n    return <div className=\"result-tag\">{ translatedTag }</div> ;\n}\n\n\n\nexport default ResultTag;\n","import React from 'react';\nimport ResultTag from './ResultTag';\n\nimport FullResponseItem from '../../../types/FullResponseItem';\n\nimport './ResultTags.css'\n\n\ninterface ResultTagProps {\n    data: FullResponseItem;\n}\n\nconst ResultTags: React.FC<ResultTagProps> = ({ data }) => {\n    const tags = extractTags(data);\n\n    const displayTags = tags.length > 0;\n\n    return (\n        displayTags ?\n        <div className=\"result-tags-container flex-row\">\n            {tags.map(tag =>\n                <ResultTag key={tag} tag={tag} />\n            )}\n        </div> :\n        <></>\n    );\n}\n\n\nconst extractTags = (data: FullResponseItem): string[] => {\n    let tags = data.jisho.main_data.results.map(result => [result.jlpt, result.tags]).flat(2);\n    if (data.jisho.main_data.results.some(result => result.is_common)) {\n        tags.push(\"common word\");\n    }\n    return tags;\n}\n\nexport default ResultTags;\n","export default __webpack_public_path__ + \"static/media/icon_copy.cbac2534.svg\";","import React from 'react';\n\nimport IconCopy from '../../../assets/icons/icon_copy.svg';\n\nimport UtilsService from '../../core/UtilsService';\n\nimport './ResultTitle.css';\n\n\ninterface ResultTitleProps {\n    children: string;\n    isExpanded: boolean;\n    toggleIsExpanded: () => void;\n    copyString: string;\n}\n\nconst ResultTitle: React.FC<ResultTitleProps> = ({\n    children,\n    isExpanded,\n    toggleIsExpanded,\n    copyString,\n}) => {\n    const utilsService = new UtilsService();\n    const copyCopyStringToClipboard = () => {\n        utilsService.copyStringToClipboard(copyString);\n    }\n\n    return (\n        <div className=\"result-title flex-row space-between\">\n            <div className=\"result-title-text mplus\">{ children }</div>\n            <div className=\"result-title-buttons flex-col space-between\">\n                <img\n                    className=\"result-title-copy unselectable\"\n                    src={IconCopy}\n                    alt=\"button to copy sample row to clipboard\"\n                    onClick={copyCopyStringToClipboard}\n                />\n                <div\n                    className=\"result-title-collapser unselectable\"\n                    onClick={toggleIsExpanded}\n                >\n                    { isExpanded ? \"collapse\" : \"expand\" }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultTitle;\n","export default __webpack_public_path__ + \"static/media/icon_chevron_up.0c1b14a0.svg\";","export default __webpack_public_path__ + \"static/media/icon_chevron_down.fee13e32.svg\";","import React from 'react';\n\nimport IconChevronUp from '../../../assets/icons/icon_chevron_up.svg';\nimport IconChevronDown from '../../../assets/icons/icon_chevron_down.svg';\n\nimport './ResultToggleBar.css';\n\n\ninterface ResultToggleBarProps {\n    isExpanded: boolean;\n    toggleIsExpanded: () => void;\n}\n\nconst ResultToggleBar: React.FC<ResultToggleBarProps> = ({ isExpanded, toggleIsExpanded }) => {\n    const imgSrc = isExpanded ? IconChevronUp : IconChevronDown;\n\n    return (\n        <div\n            className=\"result-toggle-bar unselectable\"\n            onClick={toggleIsExpanded}\n        >\n            <img src={imgSrc} alt=\"chevron to expand or collapse the result\"/>\n        </div>\n     );\n}\n\nexport default ResultToggleBar;\n","import React, { useState } from 'react';\nimport ResultAudio from './ResultAudio/ResultAudio';\nimport ResultDefinitions from './ResultDefinitions/ResultDefinitions';\nimport ResultReadings from './ResultReadings/ResultReadings';\nimport ResultRelatedWords from './ResultRelatedWords/ResultRelatedWords';\nimport ResultSentences from './ResultSentences/ResultSentences';\nimport ResultTags from './ResultTags/ResultTags';\nimport ResultTitle from './ResultTitle/ResultTitle';\nimport ResultToggleBar from './ResultToggleBar/ResultToggleBar';\n\nimport FullResponseItem from '../../types/FullResponseItem';\nimport { JishoAPIItemSense } from '../../types/ResponseItemJisho';\nimport Sentence from '../../types/Sentence';\n\nimport UtilsService from '../core/UtilsService';\n\nimport './ResultBlock.css';\n\n\ninterface ResultProps {\n    data: FullResponseItem;\n}\n\nconst Result: React.FunctionComponent<ResultProps> = ({ data }) => {\n    const utilsService = new UtilsService();\n\n    const [isExpanded, setIsExpanded] = useState<boolean>(true);\n    const toggleIsExpanded = () => setIsExpanded(!isExpanded);\n\n    const getCopyWord = (): string => {\n        const isSuruSense = (sense: JishoAPIItemSense) => sense.parts_of_speech.includes(\"Suru verb\");\n        const isSuruVerb = data.jisho.main_data.results.some(x => x.senses.some(isSuruSense));\n        return isSuruVerb ? data.word + \"（する）\" : data.word;\n    }\n\n    const getMostTrustedAccent = (): string => {\n        if (data.ojad.main_data.accent.length > 0) return data.ojad.main_data.accent[0];\n        if (data.wadoku.main_data.accent.length > 0) return data.wadoku.main_data.accent[0];\n        if (data.suzuki.main_data.accent.length > 0) return data.suzuki.main_data.accent[0];\n        return \"\";\n    }\n\n    const getFilteredDefinitions = (): string => {\n        if (data.jisho.main_data.results.length === 0) return \"\";\n        const senses = data.jisho.main_data.results.map(result => result.senses).flat(2);\n        if (senses.length === 1) {          // Don't slice dfns if only one sense\n            const dfn = senses[0].english_definitions;\n            const formattedDfn = dfn.map(word => utilsService.capitaliseString(word));\n            return formattedDfn.join(\" ; \");\n        }\n        else {\n            const dfns = senses.map(sense => sense.english_definitions.slice(0, 2));\n            const formattedDfns = dfns.map(dfn => dfn.map(word => utilsService.capitaliseString(word)));\n            return formattedDfns.map(dfn => dfn.join(\" ; \")).join(\"  /  \");\n        }\n    }\n\n    const getContextSentence = (): Sentence => {\n        if (data.wanikani.main_data.sentences.length > 0) return data.wanikani.main_data.sentences[0];\n        if (data.tangorin.main_data.sentences.length > 0) return data.tangorin.main_data.sentences[0];\n        return { en: '', ja: '' };\n    }\n\n    const copyString: string = [\n        getCopyWord(),\n        getMostTrustedAccent(),\n        getFilteredDefinitions(),\n        getContextSentence().ja,\n        getContextSentence().en,\n    ].join(\"\\t\");\n\n    return (\n        <div className=\"result-block flex-col\">\n            <ResultTitle\n                isExpanded={isExpanded}\n                toggleIsExpanded={toggleIsExpanded}\n                copyString={copyString}\n            >{ data.word }</ResultTitle>\n            { isExpanded &&\n                <>\n                    {/* Desktop */}\n                    <div className=\"flex-row hide-mobile\">\n                        <div className=\"result-left-col flex-col\">\n                            <ResultReadings data={data} />\n                            <ResultTags data={data} />\n                            <ResultAudio data={data} />\n                            <ResultRelatedWords data={data} />\n                        </div>\n                        <div className=\"result-col-separator\" />\n                        <div className=\"result-right-col flex-col\">\n                            <ResultDefinitions data={data} />\n                            <ResultSentences data={data} />\n                        </div>\n                    </div>\n\n                    {/* Mobile */}\n                    <div className=\"flex-col show-mobile\">\n                        <ResultReadings data={data} />\n                        <ResultTags data={data} />\n                        <ResultDefinitions data={data} />\n                        <ResultAudio data= {data} />\n                        <ResultSentences data={data} />\n                        <ResultRelatedWords data={data} />\n                    </div>\n                </>\n            }\n            <ResultToggleBar isExpanded={isExpanded} toggleIsExpanded={toggleIsExpanded}/>\n        </div>\n    );\n}\n\nexport default Result;\n","import React from 'react';\nimport ResultBlock from './ResultBlock';\n\nimport FullResponseItem from '../../types/FullResponseItem';\n\nimport './ResultsList.css';\n\n\ninterface ResultsListProps {\n    wordList: FullResponseItem[];\n}\n\nconst ResultsList: React.FC<ResultsListProps> = ({ wordList }) => {\n    return (\n        <div className=\"results-list\">\n            {\n                wordList.map(wordData =>\n                    <ResultBlock key={wordData.word} data={wordData} />\n                )\n            }\n        </div>\n     );\n}\n\nexport default ResultsList;\n","import { useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport InputPage from './components/InputPage/InputPage';\nimport ResultsList from './components/ResultsList/ResultsList';\n\nimport FullResponseItem from './types/FullResponseItem';\n\nimport './App.css';\n\n\nfunction App() {\n    const [wordList, setWordList] = useState<FullResponseItem[]>([]);\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"width-container\">\n                    <p className=\"app-header\">Japanese Vocab Fetcher</p>\n                    <InputPage setWordList={setWordList} />\n                    <ResultsList wordList={wordList} />\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}