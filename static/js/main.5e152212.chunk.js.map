{"version":3,"sources":["assets/icons/icon_error.svg","shared/ErrorMessage/ErrorMessage.tsx","shared/LoadingSpinner/LoadingSpinner.tsx","components/core/UtilsService.ts","components/core/HttpService.ts","components/InputPage/InputBox/InputBox.tsx","components/InputPage/InputPage.tsx","assets/icons/icon_plus.svg","assets/icons/icon_minus.svg","shared/ExpandButtons/ExpandButton.tsx","shared/ExpandButtons/FullExpandButton.tsx","assets/icons/icon_play_button.svg","assets/icons/icon_stop_button.svg","components/ResultsList/ResultAudio/ResultAudioRow.tsx","components/ResultsList/ResultAudio/ResultAudioModule.tsx","components/ResultsList/ResultAudio/ResultAudio.tsx","components/ResultsList/ResultDefinitions/ResultDefinitionSense.tsx","components/ResultsList/ResultDefinitions/ResultDefinition.tsx","components/ResultsList/ResultDefinitions/ResultDefinitions.tsx","components/ResultsList/ResultReadings/ResultReadingsRow.tsx","components/ResultsList/ResultReadings/ResultReadings.tsx","components/ResultsList/ResultRelatedWords/ResultRelatedWord.tsx","components/ResultsList/ResultRelatedWords/ResultRelatedWords.tsx","webpack:///./src/assets/icons/icon_copy.svg?048d","components/ResultsList/ResultSentences/ResultSentence.tsx","components/ResultsList/ResultSentences/ResultSentences.tsx","components/ResultsList/ResultTags/ResultTag.tsx","components/ResultsList/ResultTags/ResultTags.tsx","assets/icons/icon_copy.svg","components/ResultsList/ResultTitle/ResultTitle.tsx","assets/icons/icon_chevron_up.svg","assets/icons/icon_chevron_down.svg","components/ResultsList/ResultToggleBar/ResultToggleBar.tsx","components/ResultsList/ResultBlock.tsx","components/ResultsList/ResultsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorMessage","children","className","src","ErrorIcon","alt","LoadingSpinner","UtilsService","extractWordsFromInput","s","split","filter","char","capitaliseString","includes","slice","toUpperCase","copyStringToClipboard","copyString","navigator","clipboard","writeText","encodeURI","url","queryParams","queryString","Object","entries","map","x","join","this","doubleURIEncode","HttpService","API_URL","utilsService","slug","a","requestOptions","headers","method","addQueryParamsToUrl","fetch","data","status","Error","statusText","json","resp","InputBox","setWordList","setErrorOccurred","useSearchParams","searchParams","setSearchParams","httpService","useState","text","setText","isLoading","setIsLoading","textInput","setTextInput","sendWords","useRef","forceText","current","words","searchText","JSON","stringify","makeGetRequest","console","log","handleUserKeyPress","useCallback","e","key","shiftKey","preventDefault","focus","useEffect","window","addEventListener","removeEventListener","searchQueryParams","get","textArea","name","value","onChange","target","ref","wordsDisplay","word","index","submitButton","type","onClick","_","InputPage","errorOccurred","ExpandButton","currentDisplay","updateDisplay","maxDisplay","minDisplay","batchSize","Math","max","IconMinus","min","IconPlus","FullExpandButton","rowsDisplay","updateRowsDisplay","ResultAudioRow","audioData","Audio","audio","playing","setPlaying","currentTime","play","pause","IconStopButton","IconPlayButton","speaker","subtitle","ResultAudioModule","moduleTitle","isExpanded","updateIsExpanded","rowIndex","length","displayRow","ResultAudio","allAudio","module","wanikani","main_data","metadata","voice_actor_name","voice_description","forvo","username","japanesepod","writing","reading","some","ResultDefinitionSense","ordinality","sense","dfn","english_definitions","wordType","parts_of_speech","tags","info","getWordType","ResultDefinition","definitionData","buildTitleText","otherForms","japanese","senses","ResultDefinitions","jisho","results","result","ResultReadingsRow","title","readings","copyReadingToClipboard","ResultReadings","sitesAndReadings","ojad","accent","wadoku","suzuki","readingExists","ResultRelatedWord","relatedWord","open","ResultRelatedWords","extra","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgIconCopy","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","id","ForwardRef","ResultSentence","sentence","ja","en","interweaveSentences","sentenceLists","maxLength","list","finalList","sentenceList","push","ResultSentences","wanikaniSentences","sentences","tangorinSentences","tangorin","allSentences","ResultTag","tag","translatedTag","toLowerCase","replace","extractTags","jlpt","flat","is_common","ResultTags","ResultTitle","toggleIsExpanded","IconCopy","ResultToggleBar","imgSrc","IconChevronUp","IconChevronDown","Result","setIsExpanded","getContextSentence","isSuruSense","getCopyWord","getFilteredDefinitions","ResultsList","wordList","wordData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e152212.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_error.f3363445.svg\";","import React from 'react';\r\n\r\nimport ErrorIcon from \"../../assets/icons/icon_error.svg\";\r\nimport './ErrorMessage.css';\r\n\r\n\r\ninterface ErrorMessageProps {\r\n    children: string;\r\n}\r\n\r\nconst ErrorMessage: React.FunctionComponent<ErrorMessageProps> = ({ children }) => {\r\n    return (\r\n        <div className=\"error-message vertical-separation-large\">\r\n            <img src={ErrorIcon} alt=\"error icon\" />\r\n            { children }\r\n            <img src={ErrorIcon} alt=\"error icon\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\n\r\nconst LoadingSpinner: React.FC = () => {\r\n    return <div className=\"loader vertical-separation-large\" />;\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import QueryParams from \"../../types/QueryParams\";\r\n\r\n\r\nexport default class UtilsService {\r\n\r\n    doubleURIEncode(s: string): string {\r\n        return encodeURI(encodeURI(s));\r\n    }\r\n\r\n    addQueryParamsToUrl(url: string, queryParams: QueryParams): string {\r\n        let queryString = Object.entries(queryParams)\r\n            .map(x => x.join(\"=\"))\r\n            .join(\"&\");\r\n        return url + \"?\" + this.doubleURIEncode(queryString);\r\n    }\r\n\r\n    extractWordsFromInput = (s: string): string[] => {\r\n        return s.split(/\\s+/).filter(char => char !== \"\");\r\n    }\r\n\r\n    capitaliseString = (s: string): string => {\r\n        if (!s) return s;\r\n        if (\"( \".includes(s[0])) return s[0] + this.capitaliseString(s.slice(1));\r\n        return s[0].toUpperCase() + s.slice(1);\r\n    }\r\n\r\n    copyStringToClipboard = (copyString: string) => {\r\n        navigator.clipboard.writeText(copyString);\r\n    }\r\n\r\n}\r\n","import QueryParams from \"../../types/QueryParams\";\r\nimport UtilsService from \"./UtilsService\";\r\n\r\n\r\nexport default class HttpService {\r\n\r\n    // API_URL: string = \"http://3.8.95.26:5000\";\r\n    API_URL: string = \"https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com/dev\";\r\n    utilsService: UtilsService\r\n\r\n\r\n    constructor() {\r\n        this.utilsService = new UtilsService();\r\n    }\r\n\r\n\r\n    async makeGetRequest(slug: string, queryParams?: QueryParams): Promise<any> {\r\n        let url: string = this.API_URL + slug;\r\n        let requestOptions = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            method: \"GET\",\r\n        };\r\n\r\n        if (typeof queryParams !== \"undefined\") {\r\n            url = this.utilsService.addQueryParamsToUrl(url, queryParams)\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        if (data.status === 404) {\r\n            throw new Error(\"An error occurred: \" + data.statusText);\r\n        }\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n}\r\n","import React, { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner/LoadingSpinner';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\nimport QueryParams from '../../../types/QueryParams';\r\n\r\nimport HttpService from '../../core/HttpService';\r\nimport UtilsService from '../../core/UtilsService';\r\n\r\nimport './InputBox.css';\r\n\r\ninterface InputBoxProps {\r\n    setWordList: (s: FullResponseItem[]) => void;\r\n    setErrorOccurred: (x: boolean) => void;\r\n}\r\n\r\nconst InputBox: React.FC<InputBoxProps> = ({ setWordList, setErrorOccurred }) => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const httpService = new HttpService();\r\n    const utilsService = new UtilsService();\r\n\r\n    const [text, setText] = useState<string>('');\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    const [textInput, setTextInput] = useState<HTMLTextAreaElement | null>(null);\r\n\r\n    const sendWords = useRef((forceText?: string) => {});\r\n    sendWords.current = async (forceText?: string) => {\r\n        setIsLoading(true);\r\n        setErrorOccurred(false);\r\n\r\n        const searchText = forceText || text;\r\n        setSearchParams({ words: searchText });\r\n\r\n        const words: string[] = utilsService.extractWordsFromInput(searchText);\r\n        const queryParams: QueryParams = { words: JSON.stringify(words) };\r\n\r\n        try {\r\n            const resp = await httpService.makeGetRequest(\"/words\", queryParams);\r\n            setWordList(resp);\r\n            console.log(resp);\r\n        }\r\n        catch (error) {\r\n            setErrorOccurred(true);\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleUserKeyPress = useCallback((e: KeyboardEvent) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey && textInput != null) {\r\n            sendWords.current();\r\n        }\r\n        if (e.key === \"Tab\" && textInput != null) {\r\n            e.preventDefault();\r\n            textInput.focus();\r\n        }\r\n    }, [textInput]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleUserKeyPress);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\r\n        };\r\n    }, [handleUserKeyPress]);\r\n\r\n    // Check for query params and search if present\r\n    const searchQueryParams = useRef(() => {});\r\n    searchQueryParams.current = () => {\r\n        let words = searchParams.get(\"words\");\r\n        if (words === null || words === \"\") return;\r\n        setText(words);\r\n        sendWords.current(words);\r\n    }\r\n    useEffect(() => { searchQueryParams.current(); }, []);\r\n\r\n    const textArea = (\r\n        <TextareaAutosize\r\n            name=\"main-input\"\r\n            className=\"main-input\"\r\n            value={text}\r\n            onChange={(e: any) => setText(e.target.value)}\r\n            ref={setTextInput}\r\n        />\r\n    );\r\n    const wordsDisplay = (\r\n        <div className=\"words-display vertical-separation-small\">\r\n            {utilsService.extractWordsFromInput(text).map((word, index) =>\r\n                <div key={index} className=\"word-display\">{word}</div>\r\n            )}\r\n        </div>\r\n    );\r\n    const submitButton = (\r\n        <button\r\n            className=\"button-primary vertical-separation-medium\"\r\n            type=\"submit\"\r\n            onClick={(_) => sendWords.current()}\r\n        >\r\n            Submit\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        isLoading ? <LoadingSpinner /> : <>{textArea}{wordsDisplay}{submitButton}</>\r\n    );\r\n}\r\n\r\nexport default InputBox;\r\n","import React, { useState } from 'react';\r\nimport ErrorMessage from '../../shared/ErrorMessage/ErrorMessage';\r\nimport InputBox from './InputBox/InputBox';\r\n\r\nimport FullResponseItem from '../../types/FullResponseItem';\r\n\r\nimport './InputPage.css';\r\n\r\n\r\nexport interface InputPageProps {\r\n    setWordList: (s: FullResponseItem[]) => void;\r\n}\r\n\r\nconst InputPage: React.FC<InputPageProps> = ({ setWordList }) => {\r\n    const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n    return (\r\n        <div className=\"input-page\">\r\n            <InputBox setWordList={setWordList} setErrorOccurred={setErrorOccurred}/>\r\n            { errorOccurred && <ErrorMessage>An error occurred. Please try again</ErrorMessage> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPage;\r\n","export default __webpack_public_path__ + \"static/media/icon_plus.2cc3b49e.svg\";","export default __webpack_public_path__ + \"static/media/icon_minus.b9223dca.svg\";","import React from 'react';\r\n\r\nimport IconPlus from '../../assets/icons/icon_plus.svg';\r\nimport IconMinus from '../../assets/icons/icon_minus.svg';\r\n\r\nimport './ExpandButton.css';\r\n\r\n\r\ninterface ExpandButtonProps {\r\n    currentDisplay: number;\r\n    updateDisplay: (newDisplay: number) => void;\r\n    maxDisplay: number;\r\n    minDisplay: number;\r\n    batchSize: number;\r\n}\r\n\r\nconst ExpandButton: React.FC<ExpandButtonProps> = ({\r\n    currentDisplay,\r\n    updateDisplay,\r\n    maxDisplay,\r\n    minDisplay,\r\n    batchSize\r\n}) => {\r\n    const displayPlus = () => currentDisplay < maxDisplay;\r\n    const pressPlus = () => updateDisplay(Math.min(maxDisplay, currentDisplay + batchSize));\r\n    const displayMinus = () => currentDisplay > minDisplay;\r\n    const pressMinus = () => updateDisplay(Math.max(minDisplay, currentDisplay - batchSize));\r\n\r\n    return (\r\n        <div className=\"expand-button-container flex-row unselectable\">\r\n            { displayMinus() &&\r\n                <div className=\"expand-button expand-button-decrease\" onClick={pressMinus}>\r\n                    <img src={IconMinus} alt=\"button to decrease the number of items displayed\" />\r\n                </div>\r\n            }\r\n            { displayPlus() &&\r\n                <div className=\"expand-button expand-button-increase\" onClick={pressPlus}>\r\n                    <img src={IconPlus} alt=\"button to increase the number of items displayed\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpandButton;\r\n","import React from 'react';\r\nimport ExpandButton from './ExpandButton';\r\n\r\n\r\ninterface FullExpandButtonProps {\r\n    rowsDisplay: boolean;\r\n    updateRowsDisplay: (x: boolean) => void;\r\n}\r\n\r\nconst FullExpandButton: React.FC<FullExpandButtonProps> = ({ rowsDisplay, updateRowsDisplay }) => {\r\n    const currentDisplay = () => rowsDisplay ? 1 : 0;\r\n    const updateDisplay = (x: number) => {\r\n        updateRowsDisplay(x === 1 ? true : false);\r\n    }\r\n\r\n    return <ExpandButton\r\n        updateDisplay={updateDisplay}\r\n        minDisplay={0}\r\n        maxDisplay={1}\r\n        batchSize={1}\r\n        currentDisplay={currentDisplay()}\r\n    />;\r\n}\r\n\r\nexport default FullExpandButton;\r\n","export default __webpack_public_path__ + \"static/media/icon_play_button.7a4d59b8.svg\";","export default __webpack_public_path__ + \"static/media/icon_stop_button.00ad3332.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\r\n\r\nimport IconPlayButton from '../../../assets/icons/icon_play_button.svg'\r\nimport IconStopButton from '../../../assets/icons/icon_stop_button.svg'\r\n\r\n\r\ninterface ResultAudioRowProps {\r\n    audioData: ResultAudioRowData;\r\n}\r\n\r\nconst ResultAudioRow: React.FC<ResultAudioRowProps> = ({ audioData }) => {\r\n    const [audio] = useState(new Audio(audioData.url));\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const togglePlaying = () => setPlaying(!playing);\r\n\r\n    useEffect(() => {\r\n            audio.currentTime = 0;\r\n            playing ? audio.play() : audio.pause();\r\n        },\r\n        [playing]\r\n    );\r\n\r\n    useEffect(() => {\r\n        audio.addEventListener('ended', () => setPlaying(false));\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setPlaying(false));\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"result-audio-row flex-row\">\r\n            <img\r\n                src={ playing ? IconStopButton : IconPlayButton }\r\n                alt=\"audio player icon\"\r\n                className=\"audio-player unselectable\"\r\n                onClick={togglePlaying}\r\n            />\r\n            <div className=\"result-audio-speaker\">{ audioData.speaker }</div>\r\n            <div className=\"result-audio-subtitle\">{ audioData.subtitle || \"\" }</div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default ResultAudioRow;\r\n","import React, { useState } from 'react';\r\nimport FullExpandButton from '../../../shared/ExpandButtons/FullExpandButton';\r\nimport ResultAudioRow from './ResultAudioRow';\r\n\r\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\r\n\r\n\r\ninterface ResultAudioModuleProps {\r\n    moduleTitle: string;\r\n    audioData: ResultAudioRowData[];\r\n}\r\n\r\nconst ResultAudioModule: React.FC<ResultAudioModuleProps> = ({ moduleTitle, audioData}) => {\r\n    const [isExpanded, updateIsExpanded] = useState<boolean>(false);\r\n\r\n    const displayButton = () => audioData.length > 3;\r\n    const displayRow = (rowIndex: number): boolean => {\r\n        return (\r\n            rowIndex < 2 ||\r\n            (rowIndex === 2 && audioData.length === 3) ||\r\n            isExpanded === true\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"result-audio-module vertical-separation-small\">\r\n            <div className=\"audio-module-title\">{ moduleTitle }</div>\r\n            {audioData.filter((_, rowIndex) => displayRow(rowIndex)).map(audio =>\r\n                <ResultAudioRow key={audio.speaker} audioData={audio}/>\r\n            )}\r\n            { displayButton() &&\r\n                <FullExpandButton\r\n                    rowsDisplay={isExpanded}\r\n                    updateRowsDisplay={updateIsExpanded}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultAudioModule;\r\n","import React from 'react';\r\nimport ResultAudioModule from './ResultAudioModule';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\nimport ResultAudioRowData from '../../../types/ResultAudioRowData';\r\n\r\nimport './ResultAudio.css';\r\n\r\n\r\ninterface ResultAudioProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\ninterface AudioModule {\r\n    module: string;\r\n    audioData: ResultAudioRowData[];\r\n}\r\n\r\nconst ResultAudio: React.FC<ResultAudioProps> = ({ data }) => {\r\n\r\n    const wanikaniData: ResultAudioRowData[] = data.wanikani.main_data.audio.map(audio => ({\r\n        url: audio.url,\r\n        speaker: audio.metadata.voice_actor_name,\r\n        subtitle: audio.metadata.voice_description,\r\n    }));\r\n    const forvoData: ResultAudioRowData[] = data.forvo.main_data.audio.map(audio => ({\r\n        url: audio.url,\r\n        speaker: audio.username,\r\n        subtitle: null,\r\n    }));\r\n    const japanesePodData: ResultAudioRowData[] = data.japanesepod.main_data.audio.map(audio => ({\r\n        url: audio.url,\r\n        speaker: audio.writing,\r\n        subtitle: audio.reading,\r\n    }));\r\n\r\n    const allAudio: AudioModule[] = [\r\n        {module: \"Wanikani\", audioData: wanikaniData},\r\n        {module: \"Forvo\", audioData: forvoData},\r\n        {module: \"JapanesePod101\", audioData: japanesePodData},\r\n    ];\r\n\r\n    const displayAudio = (): boolean => allAudio.some(x => x.audioData.length > 0);\r\n\r\n    return (\r\n        displayAudio() ?\r\n        <div className=\"result-audio\">\r\n            <div className=\"left-col-title\">\r\n                Audio\r\n            </div>\r\n            {allAudio.filter(({ audioData }) => audioData.length > 0).map(({ module, audioData }) =>\r\n                <ResultAudioModule key={module} moduleTitle={module} audioData={audioData} />\r\n            )}\r\n        </div> :\r\n        <></>\r\n     );\r\n}\r\n\r\nexport default ResultAudio;\r\n","import React from 'react';\r\n\r\nimport { JishoAPIItemSense } from '../../../types/ResponseItemJisho';\r\n\r\nimport UtilsService from '../../core/UtilsService';\r\n\r\n\r\ninterface ResultDefinitionSenseProps {\r\n    ordinality: number;\r\n    sense: JishoAPIItemSense;\r\n}\r\n\r\nconst ResultDefinitionSense: React.FC<ResultDefinitionSenseProps> = ({ ordinality, sense }) => {\r\n    const utilsService = new UtilsService();\r\n\r\n    const dfn: string = sense.english_definitions.map(utilsService.capitaliseString).join(\" ; \");\r\n    const copyDefinitionToClipboard = () => {\r\n        utilsService.copyStringToClipboard(dfn);\r\n    }\r\n\r\n    const getWordType = (): string => {\r\n        let wordType = sense.parts_of_speech.join(\"・\");\r\n        if (sense.tags.length > 0) {\r\n            wordType += \" (\" + sense.tags.join(\", \") + \")\";\r\n        }\r\n        if (sense.info.length > 0) {\r\n            wordType += \" (\" + sense.info.join(\", \") + \")\";\r\n        }\r\n        return wordType;\r\n    }\r\n\r\n    return (\r\n        <div className=\"result-definition-sense flex-col\">\r\n            <div className=\"sense-part-of-speech\">{ getWordType() }</div>\r\n            <div className=\"sense-english-definition\">\r\n                <span\r\n                    className=\"unselectable copy-cursor\"\r\n                    onClick={copyDefinitionToClipboard}\r\n                >{ ordinality + '. ' }</span>\r\n                { dfn }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultDefinitionSense;\r\n","import React from 'react';\r\nimport ResultDefinitionSense from './ResultDefinitionSense';\r\n\r\nimport { JishoAPIItem, JishoAPIItemJapanese } from '../../../types/ResponseItemJisho';\r\n\r\n\r\ninterface ResultDefinitionProps {\r\n    definitionData: JishoAPIItem;\r\n}\r\n\r\nconst ResultDefinition: React.FC<ResultDefinitionProps> = ({ definitionData }) => {\r\n    const buildTitleText = (word: JishoAPIItemJapanese): string => {\r\n        const main = word.word || word.reading || \"\";\r\n        const subtext = (word.word && word.reading) ? `【${word.reading}】` : \"\";\r\n        return main + subtext;\r\n    }\r\n\r\n    const otherForms = definitionData.japanese.slice(1);\r\n    const showOtherForms = (): boolean => (otherForms.length > 0);\r\n\r\n    return (\r\n        <div className=\"result-definition flex-col\">\r\n            <div className=\"result-definition-title mplus\">\r\n                { buildTitleText(definitionData.japanese[0]) }\r\n            </div>\r\n            <div className=\"result-definition-senses-container flex-col\">\r\n                { definitionData.senses.map((sense, index) =>\r\n                    <ResultDefinitionSense key={index} ordinality={index+1} sense={sense} />\r\n                )}\r\n                {\r\n                    showOtherForms() &&\r\n                    <div className=\"result-definition-other-forms flex-col\">\r\n                        <div className=\"result-other-forms-title\">Other forms</div>\r\n                        <div className=\"result-other-forms-words mplus\">\r\n                            { otherForms.map(buildTitleText).join(\"、\") }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultDefinition;\r\n","import React from 'react';\r\nimport ResultDefinition from './ResultDefinition';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\n\r\nimport './ResultDefinitions.css';\r\n\r\n\r\ninterface ResultDefinitionsProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\nconst ResultDefinitions: React.FC<ResultDefinitionsProps> = ({ data }) => {\r\n    return (\r\n        <div className=\"result-definitions-container flex-col\">\r\n            { data.jisho.main_data.results.map(result =>\r\n                <ResultDefinition key={result.slug} definitionData={result} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultDefinitions;\r\n","import React from 'react';\r\n\r\nimport UtilsService from '../../core/UtilsService';\r\n\r\n\r\ninterface ResultReadingsRowProps {\r\n    title: string;\r\n    readings: string[];\r\n}\r\n\r\nconst ResultReadingsRow: React.FC<ResultReadingsRowProps> = ({ title, readings }) => {\r\n    const utilsService = new UtilsService();\r\n    const copyReadingToClipboard = (reading: string) => {\r\n        utilsService.copyStringToClipboard(reading);\r\n    }\r\n\r\n    return (\r\n        <div className=\"readings-row\">\r\n            <div className=\"readings-row-left\">{ title }:</div>\r\n            <div className=\"readings-row-right\">\r\n                {readings.map((reading, index) =>\r\n                    <div\r\n                        key={index}\r\n                        className=\"reading unselectable copy-cursor\"\r\n                        onClick={() => {copyReadingToClipboard(reading)}}\r\n                        title=\"Copy to clipboard\"\r\n                    >{ reading }</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default ResultReadingsRow;\r\n","import React from 'react';\r\nimport ResultReadingsRow from './ResultReadingsRow';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\n\r\nimport './ResultReadings.css';\r\n\r\n\r\ninterface ResultReadingsProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\ninterface ReadingSite {\r\n    title: string;\r\n    readings: string[];\r\n}\r\n\r\nconst ResultReadings: React.FC<ResultReadingsProps> = ({ data }) => {\r\n    const sitesAndReadings: ReadingSite[] = [\r\n        { title: \"OJAD\", readings: data.ojad.main_data.accent },\r\n        { title: \"Wadoku\", readings: data.wadoku.main_data.accent },\r\n        { title: \"Suzuki\", readings: data.suzuki.main_data.accent },\r\n    ];\r\n\r\n    const readingExists = ({ readings }: ReadingSite) => readings.length > 0;\r\n    const displayReadings = (): boolean => sitesAndReadings.some(readingExists);\r\n\r\n    return (\r\n        displayReadings() ?\r\n        <div className=\"result-readings\">\r\n            <div className=\"left-col-title\">\r\n                Readings\r\n            </div>\r\n            {sitesAndReadings.filter(readingExists).map(({ title, readings }) =>\r\n                <ResultReadingsRow key={title} title={title} readings={readings} />\r\n            )}\r\n        </div> :\r\n        <></>\r\n     );\r\n}\r\n\r\nexport default ResultReadings;\r\n","import React from 'react';\r\n\r\nimport { JishoExtraItem } from '../../../types/ResponseItemJisho';\r\n\r\n\r\ninterface ResultRelatedWordProps {\r\n    relatedWord: JishoExtraItem;\r\n}\r\n\r\nconst ResultRelatedWord: React.FC<ResultRelatedWordProps> = ({ relatedWord }) => {\r\n    const { slug, japanese } = relatedWord;\r\n\r\n    const url = `https://jisho.org/word/${slug}`;\r\n\r\n    return (\r\n        <div\r\n            className=\"related-word\"\r\n            onClick={()=> window.open(url, \"_blank\")}\r\n        >\r\n            { japanese[0].word || japanese[0].reading }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultRelatedWord;\r\n","import React from 'react';\r\nimport ResultRelatedWord from './ResultRelatedWord';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\n\r\nimport './ResultRelatedWords.css';\r\n\r\n\r\ninterface ResultRelatedWordsProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\nconst ResultRelatedWords: React.FC<ResultRelatedWordsProps> = ({ data }) => {\r\n    const displayRelatedWords = (): boolean => {\r\n        return data.jisho.main_data.extra.length > 0;\r\n    }\r\n\r\n    return (\r\n        displayRelatedWords() ?\r\n        <div className=\"result-related-words vertical-separation-small\">\r\n            <div className=\"left-col-title\">\r\n                Related words\r\n            </div>\r\n            <div className=\"related-words-container flex-row\">\r\n                {data.jisho.main_data.extra.map(result =>\r\n                    <ResultRelatedWord key={result.slug} relatedWord={result}/>\r\n                )}\r\n            </div>\r\n        </div> :\r\n        <></>\r\n     );\r\n}\r\n\r\nexport default ResultRelatedWords;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 8h-2v2h-2v-4h4v2zm8 16v-2h-6v2h6zm2-16h2v2h2v-4h-4v2zm2 12v2h-2v2h4v-4h-2zm-12 2h-2v-2h-2v4h4v-2zm14-10h-2v6h2v-6zm-16 6v-6h-2v4h-4v-14h14v4h-4v2h6v-8h-18v18h8z\"\n});\n\nfunction SvgIconCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconCopy);\nexport default __webpack_public_path__ + \"static/media/icon_copy.e4e97c1f.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport Sentence from '../../../types/Sentence';\r\n\r\nimport UtilsService from '../../core/UtilsService';\r\n\r\nimport { ReactComponent as IconCopy } from '../../../assets/icons/icon_copy.svg';\r\n\r\n\r\nexport interface ResultSentenceProps {\r\n    sentence: Sentence;\r\n    source: string;\r\n}\r\n\r\nconst ResultSentence: React.FC<ResultSentenceProps> = ({ sentence, source }) => {\r\n    const utilsService = new UtilsService();\r\n    const copySentenceToClipboard = () => {\r\n        utilsService.copyStringToClipboard(sentence.ja + '\\t' + sentence.en);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Desktop */}\r\n            <div className=\"result-sentence flex-col hide-mobile\">\r\n                <div className=\"result-sentence-top flex-row\">\r\n                    <div className=\"result-sentence-ja\">{ sentence.ja }</div>\r\n                    <div className=\"result-sentence-extra flex-row\">\r\n                        <div className=\"result-sentence-source\">{ `- ${source}` }</div>\r\n                        <IconCopy\r\n                            className=\"result-sentence-copy\"\r\n                            onClick={copySentenceToClipboard}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"result-sentence-en\">{ sentence.en }</div>\r\n            </div>\r\n\r\n            {/* Mobile */}\r\n            <div className=\"result-sentence flex-col show-mobile\">\r\n                <div className=\"result-sentence-ja\">{ sentence.ja }</div>\r\n                <div className=\"result-sentence-en\">{ sentence.en }</div>\r\n                <div className=\"result-sentence-source\">{ `- ${source}` }</div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResultSentence;\r\n","import React, { useState } from 'react';\r\nimport ExpandButton from '../../../shared/ExpandButtons/ExpandButton';\r\nimport ResultSentence, { ResultSentenceProps } from './ResultSentence';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\n\r\nimport './ResultSentences.css';\r\n\r\n\r\ninterface ResultSentencesProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\nconst ResultSentences: React.FC<ResultSentencesProps> = ({ data }) => {\r\n    const wanikaniSentences: ResultSentenceProps[] =\r\n        data.wanikani.main_data.sentences.map(s => ({sentence: s, source: \"Wanikani\"}));\r\n    const tangorinSentences: ResultSentenceProps[] =\r\n        data.tangorin.main_data.sentences.map(s => ({sentence: s, source: \"Tangorin\"}));\r\n\r\n    const allSentences = interweaveSentences([\r\n        wanikaniSentences,\r\n        tangorinSentences,\r\n    ]);\r\n\r\n    const maxDisplay = allSentences.length;\r\n    const minDisplay = Math.min(allSentences.length, 4);\r\n    const [rowsDisplay, updateRowsDisplay] = useState<number>(minDisplay);\r\n\r\n    const displayRow = (_: any, rowIndex: number): boolean => rowIndex+1 <= rowsDisplay;\r\n\r\n    return (\r\n        allSentences.length > 0 ?\r\n        <div className=\"result-sentences flex-col\">\r\n            <div className=\"right-col-title\">Context Sentences</div>\r\n            <div className=\"result-sentences-container flex-col\">\r\n                {allSentences.filter(displayRow).map(({ sentence, source }) =>\r\n                    <ResultSentence key={sentence.ja} sentence={sentence} source={source} />\r\n                )}\r\n                <ExpandButton\r\n                    currentDisplay={rowsDisplay}\r\n                    updateDisplay={updateRowsDisplay}\r\n                    maxDisplay={maxDisplay}\r\n                    minDisplay={minDisplay}\r\n                    batchSize={4}\r\n                />\r\n            </div>\r\n        </div> :\r\n        <></>\r\n    );\r\n}\r\n\r\nconst interweaveSentences = (sentenceLists: ResultSentenceProps[][]): ResultSentenceProps[] => {\r\n    const maxLength = Math.max(...sentenceLists.map(list => list.length));\r\n    let finalList: ResultSentenceProps[] = [];\r\n    for (let i = 0; i < maxLength; i++) {\r\n        for (let sentenceList of sentenceLists) {\r\n            if (i < sentenceList.length) {\r\n                finalList.push(sentenceList[i]);\r\n            }\r\n        }\r\n    }\r\n    return finalList;\r\n}\r\n\r\nexport default ResultSentences;\r\n","import React from 'react';\r\n\r\n\r\ninterface ResultTagProps {\r\n    tag: string;\r\n}\r\n\r\nconst ResultTag: React.FC<ResultTagProps> = ({ tag }) => {\r\n    const translatedTag = (\r\n        tag.slice(0,8) === \"wanikani\" ?\r\n        `wanikani level ${tag.slice(8)}` :\r\n        tag.toLowerCase().replace(\"-\", \" \")\r\n    );\r\n\r\n    return <div className=\"result-tag\">{ translatedTag }</div> ;\r\n}\r\n\r\n\r\n\r\nexport default ResultTag;\r\n","import React from 'react';\r\nimport ResultTag from './ResultTag';\r\n\r\nimport FullResponseItem from '../../../types/FullResponseItem';\r\n\r\nimport './ResultTags.css'\r\n\r\n\r\ninterface ResultTagProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\nconst ResultTags: React.FC<ResultTagProps> = ({ data }) => {\r\n    const tags = extractTags(data);\r\n\r\n    const displayTags = tags.length > 0;\r\n\r\n    return (\r\n        displayTags ?\r\n        <div className=\"result-tags-container flex-row\">\r\n            {tags.map(tag =>\r\n                <ResultTag key={tag} tag={tag} />\r\n            )}\r\n        </div> :\r\n        <></>\r\n    );\r\n}\r\n\r\n\r\nconst extractTags = (data: FullResponseItem): string[] => {\r\n    let tags = data.jisho.main_data.results.map(result => [result.jlpt, result.tags]).flat(2);\r\n    if (data.jisho.main_data.results.some(result => result.is_common)) {\r\n        tags.push(\"common word\");\r\n    }\r\n    return tags;\r\n}\r\n\r\nexport default ResultTags;\r\n","export default __webpack_public_path__ + \"static/media/icon_copy.e4e97c1f.svg\";","import React from 'react';\r\n\r\nimport IconCopy from '../../../assets/icons/icon_copy.svg';\r\n\r\nimport UtilsService from '../../core/UtilsService';\r\n\r\nimport './ResultTitle.css';\r\n\r\n\r\ninterface ResultTitleProps {\r\n    children: string;\r\n    isExpanded: boolean;\r\n    toggleIsExpanded: () => void;\r\n    copyString: string;\r\n}\r\n\r\nconst ResultTitle: React.FC<ResultTitleProps> = ({\r\n    children,\r\n    isExpanded,\r\n    toggleIsExpanded,\r\n    copyString,\r\n}) => {\r\n    const utilsService = new UtilsService();\r\n    const copyCopyStringToClipboard = () => {\r\n        utilsService.copyStringToClipboard(copyString);\r\n    }\r\n\r\n    return (\r\n        <div className=\"result-title flex-row space-between\">\r\n            <div className=\"result-title-text mplus\">{ children }</div>\r\n            <div className=\"result-title-buttons flex-col space-between\">\r\n                <img\r\n                    className=\"result-title-copy unselectable\"\r\n                    src={IconCopy}\r\n                    alt=\"button to copy sample row to clipboard\"\r\n                    onClick={copyCopyStringToClipboard}\r\n                />\r\n                <div\r\n                    className=\"result-title-collapser unselectable\"\r\n                    onClick={toggleIsExpanded}\r\n                >\r\n                    { isExpanded ? \"collapse\" : \"expand\" }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultTitle;\r\n","export default __webpack_public_path__ + \"static/media/icon_chevron_up.0c1b14a0.svg\";","export default __webpack_public_path__ + \"static/media/icon_chevron_down.fee13e32.svg\";","import React from 'react';\r\n\r\nimport IconChevronUp from '../../../assets/icons/icon_chevron_up.svg';\r\nimport IconChevronDown from '../../../assets/icons/icon_chevron_down.svg';\r\n\r\nimport './ResultToggleBar.css';\r\n\r\n\r\ninterface ResultToggleBarProps {\r\n    isExpanded: boolean;\r\n    toggleIsExpanded: () => void;\r\n}\r\n\r\nconst ResultToggleBar: React.FC<ResultToggleBarProps> = ({ isExpanded, toggleIsExpanded }) => {\r\n    const imgSrc = isExpanded ? IconChevronUp : IconChevronDown;\r\n\r\n    return (\r\n        <div\r\n            className=\"result-toggle-bar unselectable\"\r\n            onClick={toggleIsExpanded}\r\n        >\r\n            <img src={imgSrc} alt=\"chevron to expand or collapse the result\"/>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default ResultToggleBar;\r\n","import React, { useState } from 'react';\r\nimport ResultAudio from './ResultAudio/ResultAudio';\r\nimport ResultDefinitions from './ResultDefinitions/ResultDefinitions';\r\nimport ResultReadings from './ResultReadings/ResultReadings';\r\nimport ResultRelatedWords from './ResultRelatedWords/ResultRelatedWords';\r\nimport ResultSentences from './ResultSentences/ResultSentences';\r\nimport ResultTags from './ResultTags/ResultTags';\r\nimport ResultTitle from './ResultTitle/ResultTitle';\r\nimport ResultToggleBar from './ResultToggleBar/ResultToggleBar';\r\n\r\nimport FullResponseItem from '../../types/FullResponseItem';\r\nimport { JishoAPIItemSense } from '../../types/ResponseItemJisho';\r\nimport Sentence from '../../types/Sentence';\r\n\r\nimport UtilsService from '../core/UtilsService';\r\n\r\nimport './ResultBlock.css';\r\n\r\n\r\ninterface ResultProps {\r\n    data: FullResponseItem;\r\n}\r\n\r\nconst Result: React.FunctionComponent<ResultProps> = ({ data }) => {\r\n    const utilsService = new UtilsService();\r\n\r\n    const [isExpanded, setIsExpanded] = useState<boolean>(true);\r\n    const toggleIsExpanded = () => setIsExpanded(!isExpanded);\r\n\r\n    const getCopyWord = (): string => {\r\n        const isSuruSense = (sense: JishoAPIItemSense) => sense.parts_of_speech.includes(\"Suru verb\");\r\n        const isSuruVerb = data.jisho.main_data.results.some(x => x.senses.some(isSuruSense));\r\n        return isSuruVerb ? data.word + \"（する）\" : data.word;\r\n    }\r\n\r\n    const getMostTrustedAccent = (): string => {\r\n        if (data.ojad.main_data.accent.length > 0) return data.ojad.main_data.accent[0];\r\n        if (data.wadoku.main_data.accent.length > 0) return data.wadoku.main_data.accent[0];\r\n        if (data.suzuki.main_data.accent.length > 0) return data.suzuki.main_data.accent[0];\r\n        return \"\";\r\n    }\r\n\r\n    const getFilteredDefinitions = (): string => {\r\n        if (data.jisho.main_data.results.length === 0) return \"\";\r\n        const senses = data.jisho.main_data.results.map(result => result.senses).flat(2);\r\n        if (senses.length === 1) {          // Don't slice dfns if only one sense\r\n            const dfn = senses[0].english_definitions;\r\n            const formattedDfn = dfn.map(word => utilsService.capitaliseString(word));\r\n            return formattedDfn.join(\" ; \");\r\n        }\r\n        else {\r\n            const dfns = senses.map(sense => sense.english_definitions.slice(0, 2));\r\n            const formattedDfns = dfns.map(dfn => dfn.map(word => utilsService.capitaliseString(word)));\r\n            return formattedDfns.map(dfn => dfn.join(\" ; \")).join(\"  /  \");\r\n        }\r\n    }\r\n\r\n    const getContextSentence = (): Sentence => {\r\n        if (data.wanikani.main_data.sentences.length > 0) return data.wanikani.main_data.sentences[0];\r\n        if (data.tangorin.main_data.sentences.length > 0) return data.tangorin.main_data.sentences[0];\r\n        return { en: '', ja: '' };\r\n    }\r\n\r\n    const copyString: string = [\r\n        getCopyWord(),\r\n        getMostTrustedAccent(),\r\n        getFilteredDefinitions(),\r\n        getContextSentence().ja,\r\n        getContextSentence().en,\r\n    ].join(\"\\t\");\r\n\r\n    return (\r\n        <div className=\"result-block flex-col\">\r\n            <ResultTitle\r\n                isExpanded={isExpanded}\r\n                toggleIsExpanded={toggleIsExpanded}\r\n                copyString={copyString}\r\n            >{ data.word }</ResultTitle>\r\n            { isExpanded &&\r\n                <>\r\n                    {/* Desktop */}\r\n                    <div className=\"flex-row hide-mobile\">\r\n                        <div className=\"result-left-col flex-col\">\r\n                            <ResultReadings data={data} />\r\n                            <ResultTags data={data} />\r\n                            <ResultAudio data={data} />\r\n                            <ResultRelatedWords data={data} />\r\n                        </div>\r\n                        <div className=\"result-col-separator\" />\r\n                        <div className=\"result-right-col flex-col\">\r\n                            <ResultDefinitions data={data} />\r\n                            <ResultSentences data={data} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Mobile */}\r\n                    <div className=\"flex-col show-mobile\">\r\n                        <ResultReadings data={data} />\r\n                        <ResultTags data={data} />\r\n                        <ResultDefinitions data={data} />\r\n                        <ResultAudio data= {data} />\r\n                        <ResultSentences data={data} />\r\n                        <ResultRelatedWords data={data} />\r\n                    </div>\r\n                </>\r\n            }\r\n            <ResultToggleBar isExpanded={isExpanded} toggleIsExpanded={toggleIsExpanded}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport ResultBlock from './ResultBlock';\r\n\r\nimport FullResponseItem from '../../types/FullResponseItem';\r\n\r\nimport './ResultsList.css';\r\n\r\n\r\ninterface ResultsListProps {\r\n    wordList: FullResponseItem[];\r\n}\r\n\r\nconst ResultsList: React.FC<ResultsListProps> = ({ wordList }) => {\r\n    return (\r\n        <div className=\"results-list\">\r\n            {\r\n                wordList.map(wordData =>\r\n                    <ResultBlock key={wordData.word} data={wordData} />\r\n                )\r\n            }\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default ResultsList;\r\n","import { useState } from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport InputPage from './components/InputPage/InputPage';\r\nimport ResultsList from './components/ResultsList/ResultsList';\r\n\r\nimport FullResponseItem from './types/FullResponseItem';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n    const [wordList, setWordList] = useState<FullResponseItem[]>([]);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <div className=\"width-container\">\r\n                    <p className=\"app-header\">Japanese Vocab Fetcher</p>\r\n                    <InputPage setWordList={setWordList} />\r\n                    <ResultsList wordList={wordList} />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}